#运行用户
#user  nobody;
#启动进程,通常设置成和CPU的数量相等
worker_processes  8;
#全局日志以及PID文件
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;

#工作模式及连接数上限
events {
	#epoll是多路复用IO(I/OMultiplexing)中的一种方式，但是仅用于linux2.6以上内核，可以大大提供Nginx的性能
	#use epoll;
    #单个后台的worker process进程的最大并发连接数
	worker_connections  1024;
	accept_mutex off;
	#multi_accept on;
}

#设定http服务器，利用它的方向代理功能提供负载均衡支持
http {
	#设定mime类型，类型由mime.type文件定义
    include       mime.types;
    default_type  application/octet-stream;
	#设定日志格式
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
	#sendfile指令指定nginx是否调用sendfile函数(zero copy)方式来输出文件，对于普通应用，
	#必须设为on,如果用来进行下载等应用磁盘IO重负载应用，可以设置为off,以平衡磁盘与网络I/O处理速度
	#降低系统额uptime
    sendfile        on;
    #tcp_nopush     on;
	#连接超时时间
    #keepalive_timeout  0;
    keepalive_timeout  65;
	tcp_nodelay		on;
	#开启gzip压缩
    gzip  on;
	gzip_min_length 1000;
	gzip_buffers 4 8k;
	gzip_types text/plain application/json application/x-javascript text/css application/xml text/javascript image/jpeg image/gif image/png;
    proxy_next_upstream error;
	gzip_disable "MSIE [1-6]\.(?!.*SV1)"
	#设定请求缓冲
	client_header_buffer_size	1k;
	large_client_header_buffers	4 4k;
	#include /etc/nginx/conf.d/*.conf; 
	#include /etc/nginx/sites-enabled/*;
	#设定负载均衡服务器列表
	upstream tornado.server{
		#weigth参数表示权值，权值越高被分配到的几率越大
		#本机上的Squid开启3128端口
		server 127.0.0.1:8000;
		server 127.0.0.1:8001;
		server 127.0.0.1:8002;
		server 127.0.0.1:8003;
	}
	
    server {
		#监听80端口
        listen       80;
		#定义使用www.rist.com访问
        server_name  localhost;
		#server_name www.rist.com;
        #charset koi8-r;
		#设定本机虚拟主机的访问日志
        #access_log  logs/host.access.log  main;
		#反向代理配置
        location / {
            root   G:/pythonworkspace/helloword/helloWeb;
            index  index.html index.htm;
			#请求转向服务器列表
			#proxy_pass http://mysvr;
			#fastcgi_pass	www.rist.com;
			#fastcgi_param	SCRIPT_FILENAME $document_root/$fastcgi_script_name;
			#include/etc/nginx/fastcgi_params;
			proxy_pass_header Server;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Scheme $scheme;
			proxy_pass http://tornado.server;
			#proxy_pass http://127.0.0.1;
        }

        error_page  500 502 503 504 /50x.html;

        # redirect server error pages to the static page /50x.html
        #定义错误提示页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
		
		#静态文件
		location ~^/(static|templates){
			root G:/pythonworkspace/helloword/helloWeb;
			#过期设置
			expires 30d;
		}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
